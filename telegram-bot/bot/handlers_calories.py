# boot/handlers_calories (–æ–∫—Ä–µ–º–∏–π MODULE —Ñ–∞–π–ª —Å—É—Ç–æ –ø—ñ–¥ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —Ç—Ä–µ–∫–µ—Ä—É calories)
from aiogram import types
from aiogram.dispatcher import FSMContext
from bot.keyboards import calories_keyboard, CALORIE_BASE, main_menu_keyboard
from bot.states import CaloriesTracker

# --- –§–æ—Ä–º—É–ª–∞ –ú—ñ—Ñ–ª—ñ–Ω–∞-–°–∞–Ω –ñ–æ—Ä–∞ ---
def mifflin_st_jeor(weight, height, age, gender="female"):
    s = -161 if gender.lower() == "female" else 5
    bmr = (10 * weight) + (6.25 * height) - (5 * age) + s
    return round(bmr, 1)


# üÜï –ü–æ—á–∞—Ç–æ–∫ —Ç—Ä–µ–∫–µ—Ä–∞ –∫–∞–ª–æ—Ä—ñ–π
async def calories_start_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer(
        "üçé –û–±–µ—Ä–∏, —â–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —ó–ª–∞/—ó–≤ ‚Äî —è –ø—ñ–¥—Ä–∞—Ö—É—é –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–æ –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –Ω–∞ 100–≥ –ø—Ä–æ–¥—É–∫—Ç—É:",
        reply_markup=calories_keyboard()
    )
    await CaloriesTracker.waiting_for_selection.set()
    await state.update_data(selected_food=[])
    await callback.answer()


# üÜï –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É/–∑–Ω—è—Ç—Ç—è –≤–∏–±–æ—Ä—É –ø—Ä–æ–¥—É–∫—Ç—É
async def calories_food_select(callback: types.CallbackQuery, state: FSMContext):
    food_name = callback.data.replace("food_", "")
    data = await state.get_data()
    selected = data.get("selected_food", [])

    if food_name in selected:
        selected.remove(food_name)
    else:
        selected.append(food_name)

    await state.update_data(selected_food=selected)
    await callback.message.edit_reply_markup(reply_markup=calories_keyboard(selected))
    await callback.answer()


# üÜï –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫–∞–ª–æ—Ä—ñ–π
async def calories_calculate(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    selected = data.get("selected_food", [])

    if not selected:
        await callback.answer("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä–∏ —Ö–æ—á–∞ –± –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç!", show_alert=True)
        return

    total = sum(CALORIE_BASE[f] for f in selected)
    await callback.message.answer(
        f"üçΩ –¢–∏ –æ–±—Ä–∞–ª–∞/–æ–±—Ä–∞–≤:\n\n" +
        "\n".join([f"‚Ä¢ {f} ‚Äî {CALORIE_BASE[f]} –∫–∫–∞–ª" for f in selected]) +
        f"\n\nüî∏ –†–∞–∑–æ–º: <b>{total} –∫–∫–∞–ª</b>\n\n"
        "–î–ª—è –¥–æ–≤—ñ–¥–∫–∏: —Å–µ—Ä–µ–¥–Ω—è –¥–æ–±–æ–≤–∞ –Ω–æ—Ä–º–∞ –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é –ú—ñ—Ñ–ª—ñ–Ω–∞‚Äì–°–∞–Ω –ñ–æ—Ä–∞ ~1800‚Äì2000 –∫–∫–∞–ª.",
        parse_mode="HTML",
        reply_markup=main_menu_keyboard()
    )

    await state.finish()
    await callback.answer()
